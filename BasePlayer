# üë§ Documentation Oxide/Rust ‚Äî Classe `BasePlayer`

Cette documentation regroupe les principales propri√©t√©s et m√©thodes disponibles sur la classe `BasePlayer` utilis√©e dans Rust via Oxide/uMod.

---

## üß± Propri√©t√©s g√©n√©rales

| Propri√©t√©           | Type           | Description |
|---------------------|----------------|-------------|
| `userID`            | `ulong`        | SteamID 64 du joueur |
| `UserIDString`      | `string`       | SteamID sous forme de cha√Æne |
| `displayName`       | `string`       | Nom visible du joueur |
| `net`               | `Network.Net`  | Informations r√©seau du joueur |
| `Connection`        | `Connection`   | Connexion r√©seau (authentification, IP, etc.) |
| `playerID`          | `ulong`        | Identifiant unique |
| `IsSleeping()`      | `bool`         | Indique si le joueur dort |
| `IsConnected`       | `bool`         | Indique si le joueur est connect√© |
| `IsAdmin`           | `bool`         | Le joueur est administrateur (serveur) |
| `IsDeveloper`       | `bool`         | Indique si c‚Äôest un dev (Rust) |
| `IsNpc`             | `bool`         | Indique s‚Äôil s‚Äôagit d‚Äôun NPC |
| `userGroup`         | `string`       | Groupe d‚Äôutilisateur |
| `currentTeam`       | `ulong`        | ID de l‚Äô√©quipe actuelle |
| `client`            | `BasePlayer.ClientInfo` | Infos client (locale, IP, etc.) |

---

## üåç Localisation et position

| Propri√©t√© / M√©thode | Type        | Description |
|---------------------|-------------|-------------|
| `transform.position`| `Vector3`   | Position du joueur dans le monde |
| `eyes.position`     | `Vector3`   | Position des yeux du joueur (utile pour raycasts) |
| `ServerPosition`    | `Vector3`   | Position serveur actuelle |
| `IsVisible(BaseEntity)` | `bool` | V√©rifie si une entit√© est visible depuis la position du joueur |
| `LookRotation()`    | `Quaternion`| Orientation du regard du joueur |

---

## üí¨ Communication

| M√©thode             | Param√®tres       | Description |
|---------------------|------------------|-------------|
| `SendConsoleCommand(string cmd)` | `cmd` = commande console | Envoie une commande √† la console du joueur |
| `SendNetworkUpdate()` | ‚Äî | Force la mise √† jour r√©seau du joueur |
| `ChatMessage(string msg)` | `msg` = texte | Envoie un message dans le chat local |
| `ConsoleMessage(string msg)` | `msg` = texte | Envoie un message √† la console client |

---

## üéí Inventaire et items

| Propri√©t√© / M√©thode | Type           | Description |
|---------------------|----------------|-------------|
| `inventory`         | `PlayerInventory` | Acc√®s complet √† l‚Äôinventaire |
| `GetHeldEntity()`   | `HeldEntity`   | R√©cup√®re l‚Äôobjet tenu dans la main |
| `GiveItem(Item item)` | `void`       | Ajoute un item √† l‚Äôinventaire |
| `GiveItem(Item item, ItemContainer container)` | `void` | Place l‚Äôitem dans un conteneur pr√©cis |
| `TakeDamage(...)`   | `void`         | Inflige des d√©g√¢ts personnalis√©s |

---

## ‚ù§Ô∏è Vie et √©tat du joueur

| Propri√©t√© / M√©thode | Type   | Description |
|---------------------|--------|-------------|
| `health`            | `float`| Vie actuelle |
| `MaxHealth()`       | `float`| Vie maximale |
| `IsDead()`          | `bool` | Le joueur est-il mort ? |
| `Kill()`            | `void` | Tue imm√©diatement le joueur |
| `Hurt(float amount)`| `void` | Inflige des d√©g√¢ts |
| `Heal(float amount)`| `void` | Soigne le joueur |

---

## üì¶ Divers utiles

| M√©thode / Propri√©t√© | Type      | Description |
|---------------------|-----------|-------------|
| `Ban(string reason)`| `void`    | Bannit le joueur |
| `Kick(string reason)`| `void`   | Expulse le joueur |
| `CanBuild()`        | `bool`    | Peut-il construire ? |
| `CanInteract()`     | `bool`    | Peut-il interagir avec l‚Äôenvironnement ? |
| `MountEntity(BaseMountable entity)` | `void` | Monte sur un objet (ex : v√©hicule) |
| `DismountObject()`  | `void`    | Descend de l‚Äôobjet mont√© |
| `EnsureDismounted()`| `void`    | Force le d√©montage |

---

## üìò Exemple d'utilisation

```csharp
void OnPlayerInit(BasePlayer player)
{
    Puts($"Connexion de : {player.displayName} (SteamID : {player.UserIDString})");
    player.ChatMessage("Bienvenue sur le serveur !");
}
